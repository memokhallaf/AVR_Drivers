Archive member included because of file (symbol)

e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./MTIMER0_program.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./MDIO_programe.o
LOAD ./MGIE_programe.o
LOAD ./MTIMER0_program.o
LOAD ./main.o
LOAD e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x762
 *(.vectors)
 .vectors       0x00000000       0x54 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000078                __vector_1
                0x00000078                __vector_12
                0x00000078                __bad_interrupt
                0x00000078                __vector_6
                0x00000078                __vector_3
                0x00000078                __vector_13
                0x00000078                __vector_17
                0x00000078                __vector_19
                0x00000078                __vector_7
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_9
                0x00000078                __vector_2
                0x00000078                __vector_15
                0x00000078                __vector_8
                0x00000078                __vector_14
                0x00000078                __vector_10
                0x00000078                __vector_16
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./MDIO_programe.o
 .text          0x0000007c        0x0 ./MGIE_programe.o
 .text          0x0000007c        0x0 ./MTIMER0_program.o
 .text          0x0000007c        0x0 ./main.o
 .text          0x0000007c        0x0 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.mdio_setPinstatus
                0x0000007c      0x24e ./MDIO_programe.o
                0x0000007c                mdio_setPinstatus
 .text.mdio_setPinValue
                0x000002ca      0x182 ./MDIO_programe.o
                0x000002ca                mdio_setPinValue
 .text.mdio_togglePinValue
                0x0000044c       0xa4 ./MDIO_programe.o
                0x0000044c                mdio_togglePinValue
 .text.mdio_getPinValue
                0x000004f0       0xc4 ./MDIO_programe.o
                0x000004f0                mdio_getPinValue
 .text.mGIE_EnableGie
                0x000005b4       0x1c ./MGIE_programe.o
                0x000005b4                mGIE_EnableGie
 .text.mGIE_DisableGie
                0x000005d0       0x1c ./MGIE_programe.o
                0x000005d0                mGIE_DisableGie
 .text.mtimer_init
                0x000005ec       0x6a ./MTIMER0_program.o
                0x000005ec                mtimer_init
 .text.mtimer0_CallBack
                0x00000656       0x24 ./MTIMER0_program.o
                0x00000656                mtimer0_CallBack
 .text.__vector_11
                0x0000067a       0x66 ./MTIMER0_program.o
                0x0000067a                __vector_11
 .text.main     0x000006e0       0x24 ./main.o
                0x000006e0                main
 .text.fun      0x00000704       0x5a ./main.o
                0x00000704                fun
 .text.libgcc   0x0000075e        0x0 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x0000075e        0x0 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000075e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000075e        0x0 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x0000075e                exit
                0x0000075e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000075e        0x4 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000762                _etext = .

.data           0x00800060        0x0 load address 0x00000762
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./MDIO_programe.o
 .data          0x00800060        0x0 ./MGIE_programe.o
 .data          0x00800060        0x0 ./MTIMER0_program.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x5
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./MDIO_programe.o
 .bss           0x00800060        0x0 ./MGIE_programe.o
 .bss           0x00800060        0x0 ./MTIMER0_program.o
 .bss           0x00800060        0x0 ./main.o
 .bss           0x00800060        0x0 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 e:/embeded system/iti course/01- embedded systems avr tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.FunToSet  0x00800060        0x2 ./MTIMER0_program.o
                0x00800060                FunToSet
 .bss.i.1223    0x00800062        0x1 ./main.o
 .bss.count.1222
                0x00800063        0x2 ./main.o
 *(COMMON)
                0x00800065                PROVIDE (__bss_end, .)
                0x00000762                __data_load_start = LOADADDR (.data)
                0x00000762                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800065        0x0
                0x00800065                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800065                PROVIDE (__noinit_end, .)
                0x00800065                _end = .
                0x00800065                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xa14
 *(.stab)
 .stab          0x00000000      0x510 ./MDIO_programe.o
 .stab          0x00000510      0x144 ./MGIE_programe.o
                                0x1bc (size before relaxing)
 .stab          0x00000654      0x1e0 ./MTIMER0_program.o
                                0x258 (size before relaxing)
 .stab          0x00000834      0x1e0 ./main.o
                                0x258 (size before relaxing)

.stabstr        0x00000000      0x49b
 *(.stabstr)
 .stabstr       0x00000000      0x49b ./MDIO_programe.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(TIMER0_TEST.elf elf32-avr)
LOAD linker stubs
