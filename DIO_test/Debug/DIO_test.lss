
DIO_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005f4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000654  00000000  00000000  00000648  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000003b3  00000000  00000000  00000c9c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <main>
  64:	0c 94 f8 02 	jmp	0x5f0	; 0x5f0 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <mdio_setPinstatus>:
#include "MDIO_interface.h"
/******************************************/
/*				FUNCTIONS DIFINITIONS		*/
/*******************************************/
void mdio_setPinstatus(u8_t au8_port, u8_t au8_pin, u8_t au8_status )
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	2d 97       	sbiw	r28, 0x0d	; 13
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	89 83       	std	Y+1, r24	; 0x01
  82:	6a 83       	std	Y+2, r22	; 0x02
  84:	4b 83       	std	Y+3, r20	; 0x03
	/*switching over DIO port*/
	switch(au8_port)
  86:	89 81       	ldd	r24, Y+1	; 0x01
  88:	28 2f       	mov	r18, r24
  8a:	30 e0       	ldi	r19, 0x00	; 0
  8c:	3d 87       	std	Y+13, r19	; 0x0d
  8e:	2c 87       	std	Y+12, r18	; 0x0c
  90:	8c 85       	ldd	r24, Y+12	; 0x0c
  92:	9d 85       	ldd	r25, Y+13	; 0x0d
  94:	82 30       	cpi	r24, 0x02	; 2
  96:	91 05       	cpc	r25, r1
  98:	09 f4       	brne	.+2      	; 0x9c <mdio_setPinstatus+0x30>
  9a:	54 c0       	rjmp	.+168    	; 0x144 <mdio_setPinstatus+0xd8>
  9c:	2c 85       	ldd	r18, Y+12	; 0x0c
  9e:	3d 85       	ldd	r19, Y+13	; 0x0d
  a0:	23 30       	cpi	r18, 0x03	; 3
  a2:	31 05       	cpc	r19, r1
  a4:	34 f4       	brge	.+12     	; 0xb2 <mdio_setPinstatus+0x46>
  a6:	8c 85       	ldd	r24, Y+12	; 0x0c
  a8:	9d 85       	ldd	r25, Y+13	; 0x0d
  aa:	81 30       	cpi	r24, 0x01	; 1
  ac:	91 05       	cpc	r25, r1
  ae:	71 f0       	breq	.+28     	; 0xcc <mdio_setPinstatus+0x60>
  b0:	fb c0       	rjmp	.+502    	; 0x2a8 <mdio_setPinstatus+0x23c>
  b2:	2c 85       	ldd	r18, Y+12	; 0x0c
  b4:	3d 85       	ldd	r19, Y+13	; 0x0d
  b6:	23 30       	cpi	r18, 0x03	; 3
  b8:	31 05       	cpc	r19, r1
  ba:	09 f4       	brne	.+2      	; 0xbe <mdio_setPinstatus+0x52>
  bc:	7f c0       	rjmp	.+254    	; 0x1bc <mdio_setPinstatus+0x150>
  be:	8c 85       	ldd	r24, Y+12	; 0x0c
  c0:	9d 85       	ldd	r25, Y+13	; 0x0d
  c2:	84 30       	cpi	r24, 0x04	; 4
  c4:	91 05       	cpc	r25, r1
  c6:	09 f4       	brne	.+2      	; 0xca <mdio_setPinstatus+0x5e>
  c8:	b5 c0       	rjmp	.+362    	; 0x234 <mdio_setPinstatus+0x1c8>
  ca:	ee c0       	rjmp	.+476    	; 0x2a8 <mdio_setPinstatus+0x23c>
	{
	/*IN case of choosing port A*/
	case PORTA:
			/*switching over pin status*/
			switch(au8_status)
  cc:	8b 81       	ldd	r24, Y+3	; 0x03
  ce:	28 2f       	mov	r18, r24
  d0:	30 e0       	ldi	r19, 0x00	; 0
  d2:	3b 87       	std	Y+11, r19	; 0x0b
  d4:	2a 87       	std	Y+10, r18	; 0x0a
  d6:	8a 85       	ldd	r24, Y+10	; 0x0a
  d8:	9b 85       	ldd	r25, Y+11	; 0x0b
  da:	82 30       	cpi	r24, 0x02	; 2
  dc:	91 05       	cpc	r25, r1
  de:	a1 f0       	breq	.+40     	; 0x108 <mdio_setPinstatus+0x9c>
  e0:	2a 85       	ldd	r18, Y+10	; 0x0a
  e2:	3b 85       	ldd	r19, Y+11	; 0x0b
  e4:	23 30       	cpi	r18, 0x03	; 3
  e6:	31 05       	cpc	r19, r1
  e8:	d1 f0       	breq	.+52     	; 0x11e <mdio_setPinstatus+0xb2>
  ea:	8a 85       	ldd	r24, Y+10	; 0x0a
  ec:	9b 85       	ldd	r25, Y+11	; 0x0b
  ee:	81 30       	cpi	r24, 0x01	; 1
  f0:	91 05       	cpc	r25, r1
  f2:	09 f0       	breq	.+2      	; 0xf6 <mdio_setPinstatus+0x8a>
  f4:	d9 c0       	rjmp	.+434    	; 0x2a8 <mdio_setPinstatus+0x23c>
			{
				/*In case of choosing output*/
				case OUTPUT:
					/*Setting specific DIO pins to output*/
					MDIO_DDRA |= au8_pin;
  f6:	aa e3       	ldi	r26, 0x3A	; 58
  f8:	b0 e0       	ldi	r27, 0x00	; 0
  fa:	ea e3       	ldi	r30, 0x3A	; 58
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	90 81       	ld	r25, Z
 100:	8a 81       	ldd	r24, Y+2	; 0x02
 102:	89 2b       	or	r24, r25
 104:	8c 93       	st	X, r24
 106:	d0 c0       	rjmp	.+416    	; 0x2a8 <mdio_setPinstatus+0x23c>
					/*Break from this case*/
					break;
				/*In case of choosing input floating*/
				case INPUT_FLOAT:
					/*Setting specific DIO pins to input floating*/
					MDIO_DDRA &= ~au8_pin;
 108:	aa e3       	ldi	r26, 0x3A	; 58
 10a:	b0 e0       	ldi	r27, 0x00	; 0
 10c:	ea e3       	ldi	r30, 0x3A	; 58
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	98 2f       	mov	r25, r24
 114:	8a 81       	ldd	r24, Y+2	; 0x02
 116:	80 95       	com	r24
 118:	89 23       	and	r24, r25
 11a:	8c 93       	st	X, r24
 11c:	c5 c0       	rjmp	.+394    	; 0x2a8 <mdio_setPinstatus+0x23c>
					/*Break from this case*/
					break;
				/*In case of choosing input pull-up*/
				case INPUT_PULLUP:
					/*Setting specific DIO pins to input floating*/
					MDIO_DDRA &= ~au8_pin;
 11e:	aa e3       	ldi	r26, 0x3A	; 58
 120:	b0 e0       	ldi	r27, 0x00	; 0
 122:	ea e3       	ldi	r30, 0x3A	; 58
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	80 81       	ld	r24, Z
 128:	98 2f       	mov	r25, r24
 12a:	8a 81       	ldd	r24, Y+2	; 0x02
 12c:	80 95       	com	r24
 12e:	89 23       	and	r24, r25
 130:	8c 93       	st	X, r24
					/*Activating specific DIO input pins pull-up resistor*/
					MDIO_PORTA |= au8_pin;
 132:	ab e3       	ldi	r26, 0x3B	; 59
 134:	b0 e0       	ldi	r27, 0x00	; 0
 136:	eb e3       	ldi	r30, 0x3B	; 59
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	90 81       	ld	r25, Z
 13c:	8a 81       	ldd	r24, Y+2	; 0x02
 13e:	89 2b       	or	r24, r25
 140:	8c 93       	st	X, r24
 142:	b2 c0       	rjmp	.+356    	; 0x2a8 <mdio_setPinstatus+0x23c>
		break;

	/*IN case of choosing port B*/
	case PORTB:
		/*switching over pin status*/
		switch(au8_status)
 144:	8b 81       	ldd	r24, Y+3	; 0x03
 146:	28 2f       	mov	r18, r24
 148:	30 e0       	ldi	r19, 0x00	; 0
 14a:	39 87       	std	Y+9, r19	; 0x09
 14c:	28 87       	std	Y+8, r18	; 0x08
 14e:	88 85       	ldd	r24, Y+8	; 0x08
 150:	99 85       	ldd	r25, Y+9	; 0x09
 152:	82 30       	cpi	r24, 0x02	; 2
 154:	91 05       	cpc	r25, r1
 156:	a1 f0       	breq	.+40     	; 0x180 <mdio_setPinstatus+0x114>
 158:	28 85       	ldd	r18, Y+8	; 0x08
 15a:	39 85       	ldd	r19, Y+9	; 0x09
 15c:	23 30       	cpi	r18, 0x03	; 3
 15e:	31 05       	cpc	r19, r1
 160:	d1 f0       	breq	.+52     	; 0x196 <mdio_setPinstatus+0x12a>
 162:	88 85       	ldd	r24, Y+8	; 0x08
 164:	99 85       	ldd	r25, Y+9	; 0x09
 166:	81 30       	cpi	r24, 0x01	; 1
 168:	91 05       	cpc	r25, r1
 16a:	09 f0       	breq	.+2      	; 0x16e <mdio_setPinstatus+0x102>
 16c:	9d c0       	rjmp	.+314    	; 0x2a8 <mdio_setPinstatus+0x23c>
		{
			/*In case of choosing output*/
			case OUTPUT:
				/*Setting specific DIO pins to output*/
				MDIO_DDRB |= au8_pin;
 16e:	a7 e3       	ldi	r26, 0x37	; 55
 170:	b0 e0       	ldi	r27, 0x00	; 0
 172:	e7 e3       	ldi	r30, 0x37	; 55
 174:	f0 e0       	ldi	r31, 0x00	; 0
 176:	90 81       	ld	r25, Z
 178:	8a 81       	ldd	r24, Y+2	; 0x02
 17a:	89 2b       	or	r24, r25
 17c:	8c 93       	st	X, r24
 17e:	94 c0       	rjmp	.+296    	; 0x2a8 <mdio_setPinstatus+0x23c>
				/*Break from this case*/
				break;
			/*In case of choosing input floating*/
			case INPUT_FLOAT:
				/*Setting specific DIO pins to input floating*/
				MDIO_DDRB &= ~au8_pin;
 180:	a7 e3       	ldi	r26, 0x37	; 55
 182:	b0 e0       	ldi	r27, 0x00	; 0
 184:	e7 e3       	ldi	r30, 0x37	; 55
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	80 81       	ld	r24, Z
 18a:	98 2f       	mov	r25, r24
 18c:	8a 81       	ldd	r24, Y+2	; 0x02
 18e:	80 95       	com	r24
 190:	89 23       	and	r24, r25
 192:	8c 93       	st	X, r24
 194:	89 c0       	rjmp	.+274    	; 0x2a8 <mdio_setPinstatus+0x23c>
				/*Break from this case*/
				break;
			/*In case of choosing input pull-up*/
			case INPUT_PULLUP:
				/*Setting specific DIO pins to input floating*/
				MDIO_DDRB &= ~au8_pin;
 196:	a7 e3       	ldi	r26, 0x37	; 55
 198:	b0 e0       	ldi	r27, 0x00	; 0
 19a:	e7 e3       	ldi	r30, 0x37	; 55
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	80 81       	ld	r24, Z
 1a0:	98 2f       	mov	r25, r24
 1a2:	8a 81       	ldd	r24, Y+2	; 0x02
 1a4:	80 95       	com	r24
 1a6:	89 23       	and	r24, r25
 1a8:	8c 93       	st	X, r24
				/*Activating specific DIO input pins pull-up resistor*/
				MDIO_PORTB |= au8_pin;
 1aa:	a8 e3       	ldi	r26, 0x38	; 56
 1ac:	b0 e0       	ldi	r27, 0x00	; 0
 1ae:	e8 e3       	ldi	r30, 0x38	; 56
 1b0:	f0 e0       	ldi	r31, 0x00	; 0
 1b2:	90 81       	ld	r25, Z
 1b4:	8a 81       	ldd	r24, Y+2	; 0x02
 1b6:	89 2b       	or	r24, r25
 1b8:	8c 93       	st	X, r24
 1ba:	76 c0       	rjmp	.+236    	; 0x2a8 <mdio_setPinstatus+0x23c>
		break;

	/*IN case of choosing port C*/
	case PORTC:
		/*switching over pin status*/
		switch(au8_status)
 1bc:	8b 81       	ldd	r24, Y+3	; 0x03
 1be:	28 2f       	mov	r18, r24
 1c0:	30 e0       	ldi	r19, 0x00	; 0
 1c2:	3f 83       	std	Y+7, r19	; 0x07
 1c4:	2e 83       	std	Y+6, r18	; 0x06
 1c6:	8e 81       	ldd	r24, Y+6	; 0x06
 1c8:	9f 81       	ldd	r25, Y+7	; 0x07
 1ca:	82 30       	cpi	r24, 0x02	; 2
 1cc:	91 05       	cpc	r25, r1
 1ce:	a1 f0       	breq	.+40     	; 0x1f8 <mdio_setPinstatus+0x18c>
 1d0:	2e 81       	ldd	r18, Y+6	; 0x06
 1d2:	3f 81       	ldd	r19, Y+7	; 0x07
 1d4:	23 30       	cpi	r18, 0x03	; 3
 1d6:	31 05       	cpc	r19, r1
 1d8:	d1 f0       	breq	.+52     	; 0x20e <mdio_setPinstatus+0x1a2>
 1da:	8e 81       	ldd	r24, Y+6	; 0x06
 1dc:	9f 81       	ldd	r25, Y+7	; 0x07
 1de:	81 30       	cpi	r24, 0x01	; 1
 1e0:	91 05       	cpc	r25, r1
 1e2:	09 f0       	breq	.+2      	; 0x1e6 <mdio_setPinstatus+0x17a>
 1e4:	61 c0       	rjmp	.+194    	; 0x2a8 <mdio_setPinstatus+0x23c>
		{
			/*In case of choosing output*/
			case OUTPUT:
				/*Setting specific DIO pins to output*/
				MDIO_DDRC |= au8_pin;
 1e6:	a4 e3       	ldi	r26, 0x34	; 52
 1e8:	b0 e0       	ldi	r27, 0x00	; 0
 1ea:	e4 e3       	ldi	r30, 0x34	; 52
 1ec:	f0 e0       	ldi	r31, 0x00	; 0
 1ee:	90 81       	ld	r25, Z
 1f0:	8a 81       	ldd	r24, Y+2	; 0x02
 1f2:	89 2b       	or	r24, r25
 1f4:	8c 93       	st	X, r24
 1f6:	58 c0       	rjmp	.+176    	; 0x2a8 <mdio_setPinstatus+0x23c>
				/*Break from this case*/
				break;
			/*In case of choosing input floating*/
			case INPUT_FLOAT:
				/*Setting specific DIO pins to input floating*/
				MDIO_DDRC &= ~au8_pin;
 1f8:	a4 e3       	ldi	r26, 0x34	; 52
 1fa:	b0 e0       	ldi	r27, 0x00	; 0
 1fc:	e4 e3       	ldi	r30, 0x34	; 52
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	80 81       	ld	r24, Z
 202:	98 2f       	mov	r25, r24
 204:	8a 81       	ldd	r24, Y+2	; 0x02
 206:	80 95       	com	r24
 208:	89 23       	and	r24, r25
 20a:	8c 93       	st	X, r24
 20c:	4d c0       	rjmp	.+154    	; 0x2a8 <mdio_setPinstatus+0x23c>
				/*Break from this case*/
				break;
				/*In case of choosing input pull-up*/
			case INPUT_PULLUP:
				/*Setting specific DIO pins to input floating*/
				MDIO_DDRC &= ~au8_pin;
 20e:	a4 e3       	ldi	r26, 0x34	; 52
 210:	b0 e0       	ldi	r27, 0x00	; 0
 212:	e4 e3       	ldi	r30, 0x34	; 52
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	80 81       	ld	r24, Z
 218:	98 2f       	mov	r25, r24
 21a:	8a 81       	ldd	r24, Y+2	; 0x02
 21c:	80 95       	com	r24
 21e:	89 23       	and	r24, r25
 220:	8c 93       	st	X, r24
				/*Activating specific DIO input pins pull-up resistor*/
				MDIO_PORTC |= au8_pin;
 222:	a5 e3       	ldi	r26, 0x35	; 53
 224:	b0 e0       	ldi	r27, 0x00	; 0
 226:	e5 e3       	ldi	r30, 0x35	; 53
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	90 81       	ld	r25, Z
 22c:	8a 81       	ldd	r24, Y+2	; 0x02
 22e:	89 2b       	or	r24, r25
 230:	8c 93       	st	X, r24
 232:	3a c0       	rjmp	.+116    	; 0x2a8 <mdio_setPinstatus+0x23c>
		}
		break;
	/*IN case of choosing port D*/
	case PORTD:
		/*switching over pin status*/
		switch(au8_status)
 234:	8b 81       	ldd	r24, Y+3	; 0x03
 236:	28 2f       	mov	r18, r24
 238:	30 e0       	ldi	r19, 0x00	; 0
 23a:	3d 83       	std	Y+5, r19	; 0x05
 23c:	2c 83       	std	Y+4, r18	; 0x04
 23e:	8c 81       	ldd	r24, Y+4	; 0x04
 240:	9d 81       	ldd	r25, Y+5	; 0x05
 242:	82 30       	cpi	r24, 0x02	; 2
 244:	91 05       	cpc	r25, r1
 246:	99 f0       	breq	.+38     	; 0x26e <mdio_setPinstatus+0x202>
 248:	2c 81       	ldd	r18, Y+4	; 0x04
 24a:	3d 81       	ldd	r19, Y+5	; 0x05
 24c:	23 30       	cpi	r18, 0x03	; 3
 24e:	31 05       	cpc	r19, r1
 250:	c9 f0       	breq	.+50     	; 0x284 <mdio_setPinstatus+0x218>
 252:	8c 81       	ldd	r24, Y+4	; 0x04
 254:	9d 81       	ldd	r25, Y+5	; 0x05
 256:	81 30       	cpi	r24, 0x01	; 1
 258:	91 05       	cpc	r25, r1
 25a:	31 f5       	brne	.+76     	; 0x2a8 <mdio_setPinstatus+0x23c>
		{
			/*In case of choosing output*/
			case OUTPUT:
				/*Setting specific DIO pins to output*/
				MDIO_DDRD |= au8_pin;
 25c:	a1 e3       	ldi	r26, 0x31	; 49
 25e:	b0 e0       	ldi	r27, 0x00	; 0
 260:	e1 e3       	ldi	r30, 0x31	; 49
 262:	f0 e0       	ldi	r31, 0x00	; 0
 264:	90 81       	ld	r25, Z
 266:	8a 81       	ldd	r24, Y+2	; 0x02
 268:	89 2b       	or	r24, r25
 26a:	8c 93       	st	X, r24
 26c:	1d c0       	rjmp	.+58     	; 0x2a8 <mdio_setPinstatus+0x23c>
				/*Break from this case*/
				break;
			/*In case of choosing input floating*/
			case INPUT_FLOAT:
				/*Setting specific DIO pins to input floating*/
				MDIO_DDRD &= ~au8_pin;
 26e:	a1 e3       	ldi	r26, 0x31	; 49
 270:	b0 e0       	ldi	r27, 0x00	; 0
 272:	e1 e3       	ldi	r30, 0x31	; 49
 274:	f0 e0       	ldi	r31, 0x00	; 0
 276:	80 81       	ld	r24, Z
 278:	98 2f       	mov	r25, r24
 27a:	8a 81       	ldd	r24, Y+2	; 0x02
 27c:	80 95       	com	r24
 27e:	89 23       	and	r24, r25
 280:	8c 93       	st	X, r24
 282:	12 c0       	rjmp	.+36     	; 0x2a8 <mdio_setPinstatus+0x23c>
				/*Break from this case*/
				break;
				/*In case of choosing input pull-up*/
			case INPUT_PULLUP:
				/*Setting specific DIO pins to input floating*/
				MDIO_DDRD &= ~au8_pin;
 284:	a1 e3       	ldi	r26, 0x31	; 49
 286:	b0 e0       	ldi	r27, 0x00	; 0
 288:	e1 e3       	ldi	r30, 0x31	; 49
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	80 81       	ld	r24, Z
 28e:	98 2f       	mov	r25, r24
 290:	8a 81       	ldd	r24, Y+2	; 0x02
 292:	80 95       	com	r24
 294:	89 23       	and	r24, r25
 296:	8c 93       	st	X, r24
				/*Activating specific DIO input pins pull-up resistor*/
				MDIO_PORTD |= au8_pin;
 298:	a2 e3       	ldi	r26, 0x32	; 50
 29a:	b0 e0       	ldi	r27, 0x00	; 0
 29c:	e2 e3       	ldi	r30, 0x32	; 50
 29e:	f0 e0       	ldi	r31, 0x00	; 0
 2a0:	90 81       	ld	r25, Z
 2a2:	8a 81       	ldd	r24, Y+2	; 0x02
 2a4:	89 2b       	or	r24, r25
 2a6:	8c 93       	st	X, r24
		default:
			break;
	}
	/*Return from this function*/
	return;
}
 2a8:	2d 96       	adiw	r28, 0x0d	; 13
 2aa:	0f b6       	in	r0, 0x3f	; 63
 2ac:	f8 94       	cli
 2ae:	de bf       	out	0x3e, r29	; 62
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	cd bf       	out	0x3d, r28	; 61
 2b4:	cf 91       	pop	r28
 2b6:	df 91       	pop	r29
 2b8:	08 95       	ret

000002ba <mdio_setPinValue>:


void mdio_setPinValue(u8_t au8_port, u8_t au8_pin, u8_t au8_Value )
{
 2ba:	df 93       	push	r29
 2bc:	cf 93       	push	r28
 2be:	cd b7       	in	r28, 0x3d	; 61
 2c0:	de b7       	in	r29, 0x3e	; 62
 2c2:	2d 97       	sbiw	r28, 0x0d	; 13
 2c4:	0f b6       	in	r0, 0x3f	; 63
 2c6:	f8 94       	cli
 2c8:	de bf       	out	0x3e, r29	; 62
 2ca:	0f be       	out	0x3f, r0	; 63
 2cc:	cd bf       	out	0x3d, r28	; 61
 2ce:	89 83       	std	Y+1, r24	; 0x01
 2d0:	6a 83       	std	Y+2, r22	; 0x02
 2d2:	4b 83       	std	Y+3, r20	; 0x03
	/*switching over DIO Ports*/
	switch(au8_port)
 2d4:	89 81       	ldd	r24, Y+1	; 0x01
 2d6:	28 2f       	mov	r18, r24
 2d8:	30 e0       	ldi	r19, 0x00	; 0
 2da:	3d 87       	std	Y+13, r19	; 0x0d
 2dc:	2c 87       	std	Y+12, r18	; 0x0c
 2de:	8c 85       	ldd	r24, Y+12	; 0x0c
 2e0:	9d 85       	ldd	r25, Y+13	; 0x0d
 2e2:	82 30       	cpi	r24, 0x02	; 2
 2e4:	91 05       	cpc	r25, r1
 2e6:	d9 f1       	breq	.+118    	; 0x35e <mdio_setPinValue+0xa4>
 2e8:	2c 85       	ldd	r18, Y+12	; 0x0c
 2ea:	3d 85       	ldd	r19, Y+13	; 0x0d
 2ec:	23 30       	cpi	r18, 0x03	; 3
 2ee:	31 05       	cpc	r19, r1
 2f0:	34 f4       	brge	.+12     	; 0x2fe <mdio_setPinValue+0x44>
 2f2:	8c 85       	ldd	r24, Y+12	; 0x0c
 2f4:	9d 85       	ldd	r25, Y+13	; 0x0d
 2f6:	81 30       	cpi	r24, 0x01	; 1
 2f8:	91 05       	cpc	r25, r1
 2fa:	71 f0       	breq	.+28     	; 0x318 <mdio_setPinValue+0x5e>
 2fc:	96 c0       	rjmp	.+300    	; 0x42a <mdio_setPinValue+0x170>
 2fe:	2c 85       	ldd	r18, Y+12	; 0x0c
 300:	3d 85       	ldd	r19, Y+13	; 0x0d
 302:	23 30       	cpi	r18, 0x03	; 3
 304:	31 05       	cpc	r19, r1
 306:	09 f4       	brne	.+2      	; 0x30a <mdio_setPinValue+0x50>
 308:	4d c0       	rjmp	.+154    	; 0x3a4 <mdio_setPinValue+0xea>
 30a:	8c 85       	ldd	r24, Y+12	; 0x0c
 30c:	9d 85       	ldd	r25, Y+13	; 0x0d
 30e:	84 30       	cpi	r24, 0x04	; 4
 310:	91 05       	cpc	r25, r1
 312:	09 f4       	brne	.+2      	; 0x316 <mdio_setPinValue+0x5c>
 314:	69 c0       	rjmp	.+210    	; 0x3e8 <mdio_setPinValue+0x12e>
 316:	89 c0       	rjmp	.+274    	; 0x42a <mdio_setPinValue+0x170>
	{
	/*IN CASE OF CHOOSING PORT A*/
	case PORTA:
		/*switching over pin value*/
		switch(au8_Value)
 318:	8b 81       	ldd	r24, Y+3	; 0x03
 31a:	28 2f       	mov	r18, r24
 31c:	30 e0       	ldi	r19, 0x00	; 0
 31e:	3b 87       	std	Y+11, r19	; 0x0b
 320:	2a 87       	std	Y+10, r18	; 0x0a
 322:	8a 85       	ldd	r24, Y+10	; 0x0a
 324:	9b 85       	ldd	r25, Y+11	; 0x0b
 326:	00 97       	sbiw	r24, 0x00	; 0
 328:	79 f0       	breq	.+30     	; 0x348 <mdio_setPinValue+0x8e>
 32a:	2a 85       	ldd	r18, Y+10	; 0x0a
 32c:	3b 85       	ldd	r19, Y+11	; 0x0b
 32e:	21 30       	cpi	r18, 0x01	; 1
 330:	31 05       	cpc	r19, r1
 332:	09 f0       	breq	.+2      	; 0x336 <mdio_setPinValue+0x7c>
 334:	7a c0       	rjmp	.+244    	; 0x42a <mdio_setPinValue+0x170>
		{
		/*in case of choosing high*/
		case HIGH:
			/*setting specific DIO Pins to high */
			MDIO_PORTA |= au8_pin;
 336:	ab e3       	ldi	r26, 0x3B	; 59
 338:	b0 e0       	ldi	r27, 0x00	; 0
 33a:	eb e3       	ldi	r30, 0x3B	; 59
 33c:	f0 e0       	ldi	r31, 0x00	; 0
 33e:	90 81       	ld	r25, Z
 340:	8a 81       	ldd	r24, Y+2	; 0x02
 342:	89 2b       	or	r24, r25
 344:	8c 93       	st	X, r24
 346:	71 c0       	rjmp	.+226    	; 0x42a <mdio_setPinValue+0x170>
			/*break from this case*/
			break;
		/*in case of choosing low*/
		case LOW:
			/*setting specific DIO pin to low*/
			MDIO_PORTA &= ~ au8_pin;
 348:	ab e3       	ldi	r26, 0x3B	; 59
 34a:	b0 e0       	ldi	r27, 0x00	; 0
 34c:	eb e3       	ldi	r30, 0x3B	; 59
 34e:	f0 e0       	ldi	r31, 0x00	; 0
 350:	80 81       	ld	r24, Z
 352:	98 2f       	mov	r25, r24
 354:	8a 81       	ldd	r24, Y+2	; 0x02
 356:	80 95       	com	r24
 358:	89 23       	and	r24, r25
 35a:	8c 93       	st	X, r24
 35c:	66 c0       	rjmp	.+204    	; 0x42a <mdio_setPinValue+0x170>
		/*break from this case*/
		break;
	/*IN CASE OF CHOOSING PORT B*/
	case PORTB:
		/*switching over pin value*/
		switch(au8_Value)
 35e:	8b 81       	ldd	r24, Y+3	; 0x03
 360:	28 2f       	mov	r18, r24
 362:	30 e0       	ldi	r19, 0x00	; 0
 364:	39 87       	std	Y+9, r19	; 0x09
 366:	28 87       	std	Y+8, r18	; 0x08
 368:	88 85       	ldd	r24, Y+8	; 0x08
 36a:	99 85       	ldd	r25, Y+9	; 0x09
 36c:	00 97       	sbiw	r24, 0x00	; 0
 36e:	79 f0       	breq	.+30     	; 0x38e <mdio_setPinValue+0xd4>
 370:	28 85       	ldd	r18, Y+8	; 0x08
 372:	39 85       	ldd	r19, Y+9	; 0x09
 374:	21 30       	cpi	r18, 0x01	; 1
 376:	31 05       	cpc	r19, r1
 378:	09 f0       	breq	.+2      	; 0x37c <mdio_setPinValue+0xc2>
 37a:	57 c0       	rjmp	.+174    	; 0x42a <mdio_setPinValue+0x170>
		{
		/*in case of choosing high*/
		case HIGH:
			/*setting specific DIO Pins to high */
			MDIO_PORTB |= au8_pin;
 37c:	a8 e3       	ldi	r26, 0x38	; 56
 37e:	b0 e0       	ldi	r27, 0x00	; 0
 380:	e8 e3       	ldi	r30, 0x38	; 56
 382:	f0 e0       	ldi	r31, 0x00	; 0
 384:	90 81       	ld	r25, Z
 386:	8a 81       	ldd	r24, Y+2	; 0x02
 388:	89 2b       	or	r24, r25
 38a:	8c 93       	st	X, r24
 38c:	4e c0       	rjmp	.+156    	; 0x42a <mdio_setPinValue+0x170>
			/*break from this case*/
			break;
		/*in case of choosing low*/
		case LOW:
			/*setting specific DIO pin to low*/
			MDIO_PORTB &= ~ au8_pin;
 38e:	a8 e3       	ldi	r26, 0x38	; 56
 390:	b0 e0       	ldi	r27, 0x00	; 0
 392:	e8 e3       	ldi	r30, 0x38	; 56
 394:	f0 e0       	ldi	r31, 0x00	; 0
 396:	80 81       	ld	r24, Z
 398:	98 2f       	mov	r25, r24
 39a:	8a 81       	ldd	r24, Y+2	; 0x02
 39c:	80 95       	com	r24
 39e:	89 23       	and	r24, r25
 3a0:	8c 93       	st	X, r24
 3a2:	43 c0       	rjmp	.+134    	; 0x42a <mdio_setPinValue+0x170>
		/*break from this case*/
		break;
	/*IN CASE OF CHOOSING PORT C*/
	case PORTC:
		/*switching over pin value*/
		switch(au8_Value)
 3a4:	8b 81       	ldd	r24, Y+3	; 0x03
 3a6:	28 2f       	mov	r18, r24
 3a8:	30 e0       	ldi	r19, 0x00	; 0
 3aa:	3f 83       	std	Y+7, r19	; 0x07
 3ac:	2e 83       	std	Y+6, r18	; 0x06
 3ae:	8e 81       	ldd	r24, Y+6	; 0x06
 3b0:	9f 81       	ldd	r25, Y+7	; 0x07
 3b2:	00 97       	sbiw	r24, 0x00	; 0
 3b4:	71 f0       	breq	.+28     	; 0x3d2 <mdio_setPinValue+0x118>
 3b6:	2e 81       	ldd	r18, Y+6	; 0x06
 3b8:	3f 81       	ldd	r19, Y+7	; 0x07
 3ba:	21 30       	cpi	r18, 0x01	; 1
 3bc:	31 05       	cpc	r19, r1
 3be:	a9 f5       	brne	.+106    	; 0x42a <mdio_setPinValue+0x170>
		{
		/*in case of choosing high*/
		case HIGH:
			/*setting specific DIO Pins to high */
			MDIO_PORTC |= au8_pin;
 3c0:	a5 e3       	ldi	r26, 0x35	; 53
 3c2:	b0 e0       	ldi	r27, 0x00	; 0
 3c4:	e5 e3       	ldi	r30, 0x35	; 53
 3c6:	f0 e0       	ldi	r31, 0x00	; 0
 3c8:	90 81       	ld	r25, Z
 3ca:	8a 81       	ldd	r24, Y+2	; 0x02
 3cc:	89 2b       	or	r24, r25
 3ce:	8c 93       	st	X, r24
 3d0:	2c c0       	rjmp	.+88     	; 0x42a <mdio_setPinValue+0x170>
			/*break from this case*/
			break;
		/*in case of choosing low*/
		case LOW:
			/*setting specific DIO pin to low*/
			MDIO_PORTC &= ~ au8_pin;
 3d2:	a5 e3       	ldi	r26, 0x35	; 53
 3d4:	b0 e0       	ldi	r27, 0x00	; 0
 3d6:	e5 e3       	ldi	r30, 0x35	; 53
 3d8:	f0 e0       	ldi	r31, 0x00	; 0
 3da:	80 81       	ld	r24, Z
 3dc:	98 2f       	mov	r25, r24
 3de:	8a 81       	ldd	r24, Y+2	; 0x02
 3e0:	80 95       	com	r24
 3e2:	89 23       	and	r24, r25
 3e4:	8c 93       	st	X, r24
 3e6:	21 c0       	rjmp	.+66     	; 0x42a <mdio_setPinValue+0x170>
		/*break from this case*/
		break;
	/*IN CASE OF CHOOSING PORT D*/
	case PORTD:
		/*switching over pin value*/
		switch(au8_Value)
 3e8:	8b 81       	ldd	r24, Y+3	; 0x03
 3ea:	28 2f       	mov	r18, r24
 3ec:	30 e0       	ldi	r19, 0x00	; 0
 3ee:	3d 83       	std	Y+5, r19	; 0x05
 3f0:	2c 83       	std	Y+4, r18	; 0x04
 3f2:	8c 81       	ldd	r24, Y+4	; 0x04
 3f4:	9d 81       	ldd	r25, Y+5	; 0x05
 3f6:	00 97       	sbiw	r24, 0x00	; 0
 3f8:	71 f0       	breq	.+28     	; 0x416 <mdio_setPinValue+0x15c>
 3fa:	2c 81       	ldd	r18, Y+4	; 0x04
 3fc:	3d 81       	ldd	r19, Y+5	; 0x05
 3fe:	21 30       	cpi	r18, 0x01	; 1
 400:	31 05       	cpc	r19, r1
 402:	99 f4       	brne	.+38     	; 0x42a <mdio_setPinValue+0x170>
		{
		/*in case of choosing high*/
		case HIGH:
			/*setting specific DIO Pins to high */
			MDIO_PORTD |= au8_pin;
 404:	a2 e3       	ldi	r26, 0x32	; 50
 406:	b0 e0       	ldi	r27, 0x00	; 0
 408:	e2 e3       	ldi	r30, 0x32	; 50
 40a:	f0 e0       	ldi	r31, 0x00	; 0
 40c:	90 81       	ld	r25, Z
 40e:	8a 81       	ldd	r24, Y+2	; 0x02
 410:	89 2b       	or	r24, r25
 412:	8c 93       	st	X, r24
 414:	0a c0       	rjmp	.+20     	; 0x42a <mdio_setPinValue+0x170>
			/*break from this case*/
			break;
		/*in case of choosing low*/
		case LOW:
			/*setting specific DIO pin to low*/
			MDIO_PORTD &= ~ au8_pin;
 416:	a2 e3       	ldi	r26, 0x32	; 50
 418:	b0 e0       	ldi	r27, 0x00	; 0
 41a:	e2 e3       	ldi	r30, 0x32	; 50
 41c:	f0 e0       	ldi	r31, 0x00	; 0
 41e:	80 81       	ld	r24, Z
 420:	98 2f       	mov	r25, r24
 422:	8a 81       	ldd	r24, Y+2	; 0x02
 424:	80 95       	com	r24
 426:	89 23       	and	r24, r25
 428:	8c 93       	st	X, r24
		/*break from this case*/
		break;
	}
	/*Return from this function*/
	return;
}
 42a:	2d 96       	adiw	r28, 0x0d	; 13
 42c:	0f b6       	in	r0, 0x3f	; 63
 42e:	f8 94       	cli
 430:	de bf       	out	0x3e, r29	; 62
 432:	0f be       	out	0x3f, r0	; 63
 434:	cd bf       	out	0x3d, r28	; 61
 436:	cf 91       	pop	r28
 438:	df 91       	pop	r29
 43a:	08 95       	ret

0000043c <mdio_togglePinValue>:


void mdio_togglePinValue(u8_t au8_port, u8_t au8_pin )
{
 43c:	df 93       	push	r29
 43e:	cf 93       	push	r28
 440:	00 d0       	rcall	.+0      	; 0x442 <mdio_togglePinValue+0x6>
 442:	00 d0       	rcall	.+0      	; 0x444 <mdio_togglePinValue+0x8>
 444:	cd b7       	in	r28, 0x3d	; 61
 446:	de b7       	in	r29, 0x3e	; 62
 448:	89 83       	std	Y+1, r24	; 0x01
 44a:	6a 83       	std	Y+2, r22	; 0x02
	/*switching over DIO PORTS*/
	switch(au8_port)
 44c:	89 81       	ldd	r24, Y+1	; 0x01
 44e:	28 2f       	mov	r18, r24
 450:	30 e0       	ldi	r19, 0x00	; 0
 452:	3c 83       	std	Y+4, r19	; 0x04
 454:	2b 83       	std	Y+3, r18	; 0x03
 456:	8b 81       	ldd	r24, Y+3	; 0x03
 458:	9c 81       	ldd	r25, Y+4	; 0x04
 45a:	82 30       	cpi	r24, 0x02	; 2
 45c:	91 05       	cpc	r25, r1
 45e:	f9 f0       	breq	.+62     	; 0x49e <mdio_togglePinValue+0x62>
 460:	2b 81       	ldd	r18, Y+3	; 0x03
 462:	3c 81       	ldd	r19, Y+4	; 0x04
 464:	23 30       	cpi	r18, 0x03	; 3
 466:	31 05       	cpc	r19, r1
 468:	34 f4       	brge	.+12     	; 0x476 <mdio_togglePinValue+0x3a>
 46a:	8b 81       	ldd	r24, Y+3	; 0x03
 46c:	9c 81       	ldd	r25, Y+4	; 0x04
 46e:	81 30       	cpi	r24, 0x01	; 1
 470:	91 05       	cpc	r25, r1
 472:	61 f0       	breq	.+24     	; 0x48c <mdio_togglePinValue+0x50>
 474:	2e c0       	rjmp	.+92     	; 0x4d2 <mdio_togglePinValue+0x96>
 476:	2b 81       	ldd	r18, Y+3	; 0x03
 478:	3c 81       	ldd	r19, Y+4	; 0x04
 47a:	23 30       	cpi	r18, 0x03	; 3
 47c:	31 05       	cpc	r19, r1
 47e:	c1 f0       	breq	.+48     	; 0x4b0 <mdio_togglePinValue+0x74>
 480:	8b 81       	ldd	r24, Y+3	; 0x03
 482:	9c 81       	ldd	r25, Y+4	; 0x04
 484:	84 30       	cpi	r24, 0x04	; 4
 486:	91 05       	cpc	r25, r1
 488:	e1 f0       	breq	.+56     	; 0x4c2 <mdio_togglePinValue+0x86>
 48a:	23 c0       	rjmp	.+70     	; 0x4d2 <mdio_togglePinValue+0x96>
	{
	/*in case of choosing PORTA*/
	case PORTA:
		/*toggling specific DIO pin*/
		MDIO_PORTA |= au8_pin;
 48c:	ab e3       	ldi	r26, 0x3B	; 59
 48e:	b0 e0       	ldi	r27, 0x00	; 0
 490:	eb e3       	ldi	r30, 0x3B	; 59
 492:	f0 e0       	ldi	r31, 0x00	; 0
 494:	90 81       	ld	r25, Z
 496:	8a 81       	ldd	r24, Y+2	; 0x02
 498:	89 2b       	or	r24, r25
 49a:	8c 93       	st	X, r24
 49c:	1a c0       	rjmp	.+52     	; 0x4d2 <mdio_togglePinValue+0x96>
		/*break from this case*/
		break;
	/*in case of choosing PORTB*/
	case PORTB:
		/*toggling specific DIO pin*/
		MDIO_PORTB |= au8_pin;
 49e:	a8 e3       	ldi	r26, 0x38	; 56
 4a0:	b0 e0       	ldi	r27, 0x00	; 0
 4a2:	e8 e3       	ldi	r30, 0x38	; 56
 4a4:	f0 e0       	ldi	r31, 0x00	; 0
 4a6:	90 81       	ld	r25, Z
 4a8:	8a 81       	ldd	r24, Y+2	; 0x02
 4aa:	89 2b       	or	r24, r25
 4ac:	8c 93       	st	X, r24
 4ae:	11 c0       	rjmp	.+34     	; 0x4d2 <mdio_togglePinValue+0x96>
		/*break from this case*/
		break;
	/*in case of choosing PORTB*/
	case PORTC:
		/*toggling specific DIO pin*/
		MDIO_PORTC |= au8_pin;
 4b0:	a5 e3       	ldi	r26, 0x35	; 53
 4b2:	b0 e0       	ldi	r27, 0x00	; 0
 4b4:	e5 e3       	ldi	r30, 0x35	; 53
 4b6:	f0 e0       	ldi	r31, 0x00	; 0
 4b8:	90 81       	ld	r25, Z
 4ba:	8a 81       	ldd	r24, Y+2	; 0x02
 4bc:	89 2b       	or	r24, r25
 4be:	8c 93       	st	X, r24
 4c0:	08 c0       	rjmp	.+16     	; 0x4d2 <mdio_togglePinValue+0x96>
		/*break from this case*/
		break;
	/*in case of choosing PORTB*/
	case PORTD:
		/*toggling specific DIO pin*/
		MDIO_PORTD |= au8_pin;
 4c2:	a2 e3       	ldi	r26, 0x32	; 50
 4c4:	b0 e0       	ldi	r27, 0x00	; 0
 4c6:	e2 e3       	ldi	r30, 0x32	; 50
 4c8:	f0 e0       	ldi	r31, 0x00	; 0
 4ca:	90 81       	ld	r25, Z
 4cc:	8a 81       	ldd	r24, Y+2	; 0x02
 4ce:	89 2b       	or	r24, r25
 4d0:	8c 93       	st	X, r24
		/*break from default*/
		break;
	}
	/*Return from this function*/
	return;
}
 4d2:	0f 90       	pop	r0
 4d4:	0f 90       	pop	r0
 4d6:	0f 90       	pop	r0
 4d8:	0f 90       	pop	r0
 4da:	cf 91       	pop	r28
 4dc:	df 91       	pop	r29
 4de:	08 95       	ret

000004e0 <mdio_getPinValue>:


u8_t mdio_getPinValue(u8_t au8_port, u8_t au8_pin )
{
 4e0:	df 93       	push	r29
 4e2:	cf 93       	push	r28
 4e4:	00 d0       	rcall	.+0      	; 0x4e6 <mdio_getPinValue+0x6>
 4e6:	00 d0       	rcall	.+0      	; 0x4e8 <mdio_getPinValue+0x8>
 4e8:	0f 92       	push	r0
 4ea:	cd b7       	in	r28, 0x3d	; 61
 4ec:	de b7       	in	r29, 0x3e	; 62
 4ee:	8a 83       	std	Y+2, r24	; 0x02
 4f0:	6b 83       	std	Y+3, r22	; 0x03
	/*Local variable used to get a specific pin value*/
	u8_t au8_pinValue = 0;
 4f2:	19 82       	std	Y+1, r1	; 0x01
	/*switching over DIO ports*/
	switch(au8_port)
 4f4:	8a 81       	ldd	r24, Y+2	; 0x02
 4f6:	28 2f       	mov	r18, r24
 4f8:	30 e0       	ldi	r19, 0x00	; 0
 4fa:	3d 83       	std	Y+5, r19	; 0x05
 4fc:	2c 83       	std	Y+4, r18	; 0x04
 4fe:	8c 81       	ldd	r24, Y+4	; 0x04
 500:	9d 81       	ldd	r25, Y+5	; 0x05
 502:	82 30       	cpi	r24, 0x02	; 2
 504:	91 05       	cpc	r25, r1
 506:	11 f1       	breq	.+68     	; 0x54c <mdio_getPinValue+0x6c>
 508:	2c 81       	ldd	r18, Y+4	; 0x04
 50a:	3d 81       	ldd	r19, Y+5	; 0x05
 50c:	23 30       	cpi	r18, 0x03	; 3
 50e:	31 05       	cpc	r19, r1
 510:	34 f4       	brge	.+12     	; 0x51e <mdio_getPinValue+0x3e>
 512:	8c 81       	ldd	r24, Y+4	; 0x04
 514:	9d 81       	ldd	r25, Y+5	; 0x05
 516:	81 30       	cpi	r24, 0x01	; 1
 518:	91 05       	cpc	r25, r1
 51a:	61 f0       	breq	.+24     	; 0x534 <mdio_getPinValue+0x54>
 51c:	3a c0       	rjmp	.+116    	; 0x592 <mdio_getPinValue+0xb2>
 51e:	2c 81       	ldd	r18, Y+4	; 0x04
 520:	3d 81       	ldd	r19, Y+5	; 0x05
 522:	23 30       	cpi	r18, 0x03	; 3
 524:	31 05       	cpc	r19, r1
 526:	f1 f0       	breq	.+60     	; 0x564 <mdio_getPinValue+0x84>
 528:	8c 81       	ldd	r24, Y+4	; 0x04
 52a:	9d 81       	ldd	r25, Y+5	; 0x05
 52c:	84 30       	cpi	r24, 0x04	; 4
 52e:	91 05       	cpc	r25, r1
 530:	29 f1       	breq	.+74     	; 0x57c <mdio_getPinValue+0x9c>
 532:	2f c0       	rjmp	.+94     	; 0x592 <mdio_getPinValue+0xb2>
	{
	/*in case of choosing PORTA*/
	case PORTA:
		/*checking a specific pin value*/
		if(MDIO_PINA & au8_pin)
 534:	e9 e3       	ldi	r30, 0x39	; 57
 536:	f0 e0       	ldi	r31, 0x00	; 0
 538:	90 81       	ld	r25, Z
 53a:	8b 81       	ldd	r24, Y+3	; 0x03
 53c:	89 23       	and	r24, r25
 53e:	88 23       	and	r24, r24
 540:	19 f0       	breq	.+6      	; 0x548 <mdio_getPinValue+0x68>
		{
			/*setting the pin value to high*/
			au8_pinValue = HIGH;
 542:	81 e0       	ldi	r24, 0x01	; 1
 544:	89 83       	std	Y+1, r24	; 0x01
 546:	25 c0       	rjmp	.+74     	; 0x592 <mdio_getPinValue+0xb2>
		}
		else
		{
			/*setting the pin value to low*/
			au8_pinValue = LOW;
 548:	19 82       	std	Y+1, r1	; 0x01
 54a:	23 c0       	rjmp	.+70     	; 0x592 <mdio_getPinValue+0xb2>
		/*break from this case*/
		break;
	/*in case of choosing PORTB*/
	case PORTB:
		/*checking a specific pin value*/
		if(MDIO_PINB & au8_pin)
 54c:	e6 e3       	ldi	r30, 0x36	; 54
 54e:	f0 e0       	ldi	r31, 0x00	; 0
 550:	90 81       	ld	r25, Z
 552:	8b 81       	ldd	r24, Y+3	; 0x03
 554:	89 23       	and	r24, r25
 556:	88 23       	and	r24, r24
 558:	19 f0       	breq	.+6      	; 0x560 <mdio_getPinValue+0x80>
		{
			/*setting the pin value to high*/
			au8_pinValue = HIGH;
 55a:	81 e0       	ldi	r24, 0x01	; 1
 55c:	89 83       	std	Y+1, r24	; 0x01
 55e:	19 c0       	rjmp	.+50     	; 0x592 <mdio_getPinValue+0xb2>
		}
		else
		{
			/*setting the pin value to low*/
			au8_pinValue = LOW;
 560:	19 82       	std	Y+1, r1	; 0x01
 562:	17 c0       	rjmp	.+46     	; 0x592 <mdio_getPinValue+0xb2>
		/*break from this case*/
		break;
	/*in case of choosing PORTC*/
	case PORTC:
		/*checking a specific pin value*/
		if(MDIO_PINC & au8_pin)
 564:	e3 e3       	ldi	r30, 0x33	; 51
 566:	f0 e0       	ldi	r31, 0x00	; 0
 568:	90 81       	ld	r25, Z
 56a:	8b 81       	ldd	r24, Y+3	; 0x03
 56c:	89 23       	and	r24, r25
 56e:	88 23       	and	r24, r24
 570:	19 f0       	breq	.+6      	; 0x578 <mdio_getPinValue+0x98>
		{
			/*setting the pin value to high*/
			au8_pinValue = HIGH;
 572:	81 e0       	ldi	r24, 0x01	; 1
 574:	89 83       	std	Y+1, r24	; 0x01
 576:	0d c0       	rjmp	.+26     	; 0x592 <mdio_getPinValue+0xb2>
		}
		else
		{
			/*setting the pin value to low*/
			au8_pinValue = LOW;
 578:	19 82       	std	Y+1, r1	; 0x01
 57a:	0b c0       	rjmp	.+22     	; 0x592 <mdio_getPinValue+0xb2>
		/*break from this case*/
		break;
	/*in case of choosing PORTD*/
	case PORTD:
		/*checking a specific pin value*/
		if(MDIO_PIND & au8_pin)
 57c:	e0 e3       	ldi	r30, 0x30	; 48
 57e:	f0 e0       	ldi	r31, 0x00	; 0
 580:	90 81       	ld	r25, Z
 582:	8b 81       	ldd	r24, Y+3	; 0x03
 584:	89 23       	and	r24, r25
 586:	88 23       	and	r24, r24
 588:	19 f0       	breq	.+6      	; 0x590 <mdio_getPinValue+0xb0>
		{
			/*setting the pin value to high*/
			au8_pinValue = HIGH;
 58a:	81 e0       	ldi	r24, 0x01	; 1
 58c:	89 83       	std	Y+1, r24	; 0x01
 58e:	01 c0       	rjmp	.+2      	; 0x592 <mdio_getPinValue+0xb2>
		}
		else
		{
			/*setting the pin value to low*/
			au8_pinValue = LOW;
 590:	19 82       	std	Y+1, r1	; 0x01
	default:
		/*break from default*/
		break;
	}
	/*Return from this function*/
	return au8_pinValue ;
 592:	89 81       	ldd	r24, Y+1	; 0x01
}
 594:	0f 90       	pop	r0
 596:	0f 90       	pop	r0
 598:	0f 90       	pop	r0
 59a:	0f 90       	pop	r0
 59c:	0f 90       	pop	r0
 59e:	cf 91       	pop	r28
 5a0:	df 91       	pop	r29
 5a2:	08 95       	ret

000005a4 <main>:
#include"LBIT_MATH.h"
#include"LSTD_TYPES.h"
#include"MDIO_interface.h"

int main(void)
{
 5a4:	df 93       	push	r29
 5a6:	cf 93       	push	r28
 5a8:	cd b7       	in	r28, 0x3d	; 61
 5aa:	de b7       	in	r29, 0x3e	; 62
	 mdio_setPinstatus( PORTC, (PIN0 | PIN5), OUTPUT );
 5ac:	83 e0       	ldi	r24, 0x03	; 3
 5ae:	61 e2       	ldi	r22, 0x21	; 33
 5b0:	41 e0       	ldi	r20, 0x01	; 1
 5b2:	0e 94 36 00 	call	0x6c	; 0x6c <mdio_setPinstatus>
	 mdio_setPinstatus(PORTD,(PIN1 | PIN4), INPUT_PULLUP );
 5b6:	84 e0       	ldi	r24, 0x04	; 4
 5b8:	62 e1       	ldi	r22, 0x12	; 18
 5ba:	43 e0       	ldi	r20, 0x03	; 3
 5bc:	0e 94 36 00 	call	0x6c	; 0x6c <mdio_setPinstatus>
	 while(1)
	 {
		 if( mdio_getPinValue(PORTD,PIN0) == LOW )
 5c0:	84 e0       	ldi	r24, 0x04	; 4
 5c2:	61 e0       	ldi	r22, 0x01	; 1
 5c4:	0e 94 70 02 	call	0x4e0	; 0x4e0 <mdio_getPinValue>
 5c8:	88 23       	and	r24, r24
 5ca:	31 f4       	brne	.+12     	; 0x5d8 <main+0x34>
		 {
			 mdio_setPinValue( PORTC, PIN0 , HIGH);
 5cc:	83 e0       	ldi	r24, 0x03	; 3
 5ce:	61 e0       	ldi	r22, 0x01	; 1
 5d0:	41 e0       	ldi	r20, 0x01	; 1
 5d2:	0e 94 5d 01 	call	0x2ba	; 0x2ba <mdio_setPinValue>
 5d6:	f4 cf       	rjmp	.-24     	; 0x5c0 <main+0x1c>
		 }
		 else if( mdio_getPinValue(PORTD,PIN4) == LOW)
 5d8:	84 e0       	ldi	r24, 0x04	; 4
 5da:	60 e1       	ldi	r22, 0x10	; 16
 5dc:	0e 94 70 02 	call	0x4e0	; 0x4e0 <mdio_getPinValue>
 5e0:	88 23       	and	r24, r24
 5e2:	71 f7       	brne	.-36     	; 0x5c0 <main+0x1c>
		 {
			 mdio_setPinValue( PORTC, PIN5 , HIGH);
 5e4:	83 e0       	ldi	r24, 0x03	; 3
 5e6:	60 e2       	ldi	r22, 0x20	; 32
 5e8:	41 e0       	ldi	r20, 0x01	; 1
 5ea:	0e 94 5d 01 	call	0x2ba	; 0x2ba <mdio_setPinValue>
 5ee:	e8 cf       	rjmp	.-48     	; 0x5c0 <main+0x1c>

000005f0 <_exit>:
 5f0:	f8 94       	cli

000005f2 <__stop_program>:
 5f2:	ff cf       	rjmp	.-2      	; 0x5f2 <__stop_program>
